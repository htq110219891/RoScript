function	script	getGVGMapName	{
	return "bat_a" + (getarg(0) < 10 ? "0" + getarg(0) : getarg(0));
}

-	script	bat_flag	-1,{
	.@map_name$ = strnpcinfo(4);
	.@npc_name$ = "战场控制器";
	.@group_index = atoi( strnpcinfo(2) );
	if(getvariableofnpc(.battle_flags[.@group_index], .@npc_name$) != @battle_group) {
		progressbar "",6;
		set getvariableofnpc(.battle_flags[.@group_index], .@npc_name$), @battle_group;
	}
}

bat_a01,274,203,4	duplicate(bat_flag)	领地旗帜#0	GUILD_FLAG
bat_a01,173,345,4	duplicate(bat_flag)	领地旗帜#1	GUILD_FLAG
bat_a01,164,50,4	duplicate(bat_flag)	领地旗帜#2	GUILD_FLAG

bat_a02,274,203,4	duplicate(bat_flag)	领地旗帜#3	GUILD_FLAG
bat_a02,173,345,4	duplicate(bat_flag)	领地旗帜#4	GUILD_FLAG
bat_a02,164,50,4	duplicate(bat_flag)	领地旗帜#5	GUILD_FLAG

bat_a03,274,203,4	duplicate(bat_flag)	领地旗帜#6	GUILD_FLAG
bat_a03,173,345,4	duplicate(bat_flag)	领地旗帜#7	GUILD_FLAG
bat_a03,164,50,4	duplicate(bat_flag)	领地旗帜#8	GUILD_FLAG

bat_a04,274,203,4	duplicate(bat_flag)	领地旗帜#9	GUILD_FLAG
bat_a04,173,345,4	duplicate(bat_flag)	领地旗帜#10	GUILD_FLAG
bat_a04,164,50,4	duplicate(bat_flag)	领地旗帜#11	GUILD_FLAG

bat_a05,274,203,4	duplicate(bat_flag)	领地旗帜#12	GUILD_FLAG
bat_a05,173,345,4	duplicate(bat_flag)	领地旗帜#13	GUILD_FLAG
bat_a05,164,50,4	duplicate(bat_flag)	领地旗帜#14	GUILD_FLAG

bat_a06,274,203,4	duplicate(bat_flag)	领地旗帜#15	GUILD_FLAG
bat_a06,173,345,4	duplicate(bat_flag)	领地旗帜#16	GUILD_FLAG
bat_a06,164,50,4	duplicate(bat_flag)	领地旗帜#17	GUILD_FLAG

prontera,110,78,6	script	战场控制器	-1,{
	OnTimer1000:

		// 设置分数
		for(.@i = 0; .@i < getarraysize(.battle_flags); .@i++) {
			.@battle_group = .@i / 3;
			
			if(.battle_flags[.@i] != 0) {
				if(.battle_flags[.@i] % 2 == 1) {
					.battle_points[.@battle_group * 2] = .battle_points[.@battle_group * 2] + 1;
				}
				else if(.battle_flags[.@i] % 2 == 0) {
					.battle_points[.@battle_group * 2 + 1] = .battle_points[.@battle_group * 2 + 1] + 1;
				}
			}
		}

		// 更新分数
		.@bat_count = (getarraysize($gvg_guilds) % 2 == 1 ? 1 : 0) + getarraysize($gvg_guilds) / 2;
		for(.@i = 0; .@i < .@bat_count; .@i++) {
			bg_updatescore callfunc("getGVGMapName", .@i + 1),.battle_points[.@i * 2],.battle_points[.@i * 2 + 1];
		}
		.total_timer = 1200000;
		.timer = .timer + 1000;
		if(.timer >= .total_timer) {
			goto OnNext;
		}
		else if(.timer >= .total_timer - 1000) {
			timer_announce(1);
		}
		else if(.timer >= .total_timer - 2000) {
			timer_announce(2);
		}
		else if(.timer >= .total_timer - 3000) {
			timer_announce(3);
		}
		else if(.timer >= .total_timer - 4000) {
			timer_announce(4);
		}
		else if(.timer >= .total_timer - 5000) {
			timer_announce(5);
		}
		else if(.timer >= .total_timer - 6000) {
			timer_announce(6);
		}
		else if(.timer >= .total_timer - 7000) {
			timer_announce(7);
		}
		else if(.timer >= .total_timer - 8000) {
			timer_announce(8);
		}
		else if(.timer >= .total_timer - 9000) {
			timer_announce(9);
		}
		else if(.timer >= .total_timer - 10000) {
			timer_announce(10);
		}

		// 更新计时器
		stopnpctimer;
		initnpctimer;

		// 结束
		end;


	OnSun1930:
	OnSat1930:
	OnStart:
		.timer = 0;
		deletearray $@instance_gvg$[0],getarraysize($@instance_gvg$);
		deletearray .@outIndexArray[0],getarraysize(.@outIndexArray);
		setarray .battle_points[0],0,0,0,0,0,0,0,0,0,0,0,0;
		setarray .battle_flags[0],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;	


		// 创建战场
		.@bat_count = (getarraysize($gvg_guilds) % 2 == 1 ? 1 : 0) + getarraysize($gvg_guilds) / 2;
		if(.@bat_count > 0) {
			
			for(.@i = 0; .@i < .@bat_count; .@i++) {
				.@gvg_map_name$ = callfunc("getGVGMapName", .@i + 1);
				setmapflag .@gvg_map_name$,mf_noteleport;
				setmapflag .@gvg_map_name$,mf_nogo;
				setmapflag .@gvg_map_name$,mf_nowarpto;
				setmapflag .@gvg_map_name$,mf_nosave;
				setmapflag .@gvg_map_name$,mf_nomemo;
				setmapflag .@gvg_map_name$,mf_monster_noteleport;
				setmapflag .@gvg_map_name$,mf_battleground,2;
				bg_create(.@gvg_map_name$, 0, 0);
				bg_team_setxy(1, 354, 53);
				bg_team_setxy(2, 354, 344);
				$@instance_gvg$[getarraysize($@instance_gvg$)] = .@gvg_map_name$;
			} 

			$@gvg_active = 1;


			// 如果只有一个公会则判断胜利
			if(getarraysize($gvg_guilds) == 1) {
				goto OnNext;
			}

			switch(getarraysize($gvg_guilds)) {
				case 2:
					announce "公会战总决赛开始 " +  getguildname($gvg_guilds[0]) + " vs " + getguildname($gvg_guilds[1]),bc_all;
					break;
				case 3:
				case 4:
					announce "公会战半决赛开始",bc_all;
					break;
				default:
					announce "公会战新一轮淘汰赛已开启，请大家踊跃参与",bc_all;
					break;
			}
		}

		initnpctimer;

		end;

	OnNext:
		stopnpctimer;
		.@bat_count = getarraysize($@instance_gvg$);
		for(.@i = 0; .@i < .@bat_count; .@i = .@i + 1) {

			// 比较分数
			.@winner = .battle_points[.@i * 2] >= .battle_points[.@i * 2 + 1];

			// 获得实例索引
			.@index = searcharray($@instance_gvg$, callfunc("getGVGMapName", .@i + 1));
		
			// 设置晋级
			.@outIndex = (.@index * 2) + 1 >= getarraysize($gvg_guilds) ? -1 : searcharray($gvg_guilds, .@winner ? $gvg_guilds[(.@index * 2) + 1] : $gvg_guilds[.@index * 2]);
		
			// 淘汰该公会
			if(.@outIndex != -1) .@outIndexArray[getarraysize(.@outIndexArray)] = .@outIndex;

			// 传送用户回首都
			mapwarp callfunc("getGVGMapName", .@i + 1), "prontera", 116, 73;
		}

		// 移除淘汰公会
		for(.@i = 0; .@i < getarraysize(.@outIndexArray); .@i++) {
			deletearray $gvg_guilds[.@outIndexArray[.@i]],1;
		}

		// 计算成绩
		.@less_count = getarraysize($gvg_guilds);
		if(.@less_count == 1) {
			// 设置胜利公会
			$gvg_winner = $gvg_guilds[0];
	
			// 移除最后一个公会战
			deletearray $gvg_guilds[0],1;

			// 通知公会战结束
			goto OnEnd;
		}
		else if(.@less_count > 1) {
			goto OnStart;
		}

		end;

	OnEnd:
		if($@gvg_active > 0) {
			$@gvg_active = 0;
			deletearray $gvg_guilds[0],getarraysize($gvg_guilds);
			announce "公会战已结束，最后获胜的公会是" + getguildname($gvg_winner),bc_all;
		}
		end;

	function	script	timer_announce	{
		.@bat_count = (getarraysize($gvg_guilds) % 2 == 1 ? 1 : 0) + getarraysize($gvg_guilds) / 2;
		for(.@i = 0; .@i < .@bat_count; .@i++) {
			mapannounce callfunc("getGVGMapName", .@i + 1), getarg(0) + "秒后战斗结束,现在比分" + .battle_points[.@i * 2] + " vs " + .battle_points[.@i * 2 + 1] ,bc_map,"0xFFCE00";
		}
	}

}

prontera,110,78,6	script	战场接引人	105,{
	// PVP 或 GVG
	
	.@guild_id = getcharid(2);
	.@is_master = .@guild_id != 0 && getguildmaster(.@guild_id) == strcharinfo(0);
	.@is_readay = .@guild_id != 0 && searcharray($gvg_guilds, .@guild_id) >= 0;
	// 如果未申请并且是会长
	if(!.@is_readay && .@is_master && $@gvg_active == 0) {
		.@select_two$ = "^FF0000申请公会战^000000";
	}

	// 如果已申请
	else if(.@is_readay) {
		if($@gvg_active) {
			.@select_two$ = "^FF0000进入公会战^000000";
		}
		else {
			.@select_two$ = "^AAAAAA进入公会战^000000";
		}
	}
	else {
		if($@gvg_active == 0) {
			.@select_two$ = "^AAAAAA未报名公会战^000000";
		}
		else {
			.@select_two$ = "^AAAAAA公会战进行中^000000";
		}
	}

	.@i = select("PVP无限制房间 [" + getmapusers("pvp_y_1-2") + "/100]" + ":" + .@select_two$ + (getgmlevel() >= 99 ? ($@gvg_active == 1 ? ":公会战下一轮" : ":开启公会战") : "")) - 1;
	switch(.@i) {
		case 0:
			warp "pvp_y_1-2", 0, 0;
			break;
		case 1:
			if(!.@is_readay && .@is_master && $@gvg_active == 0) {
				mes "报名需要";
			
				$gvg_guilds[getarraysize($gvg_guilds)] = .@guild_id;
				mes "报名成功。";
				close;
			}

			if(.@is_readay) {
				if($@gvg_active) {
				
					.@team = searcharray($gvg_guilds, .@guild_id) + 1;
					bg_join(.@team);
					@battle_group = .@team;
					switch(.@team % 2) {
						case 1: warp $@instance_gvg$[searcharray($gvg_guilds, .@guild_id) / 2],354,53; break;
						case 0: warp $@instance_gvg$[searcharray($gvg_guilds, .@guild_id) / 2],354,344; break;
					}
				}
				else {
					mes "公会战未开启";
					close;
				}				
			}
			else {
				if($@gvg_active == 0) {
					mes "未报名公会战";
					close;
				}
				else {
					mes "请等待公会战结束后在进行申请。";
					close;
				}
			}
			end;

		case 2:
			if($@gvg_active == 0) {
				donpcevent "战场控制器::OnStart";
			}
			else {
				donpcevent "战场控制器::OnNext";
			}
			end;

	}

	end;

	OnInit:
		

}